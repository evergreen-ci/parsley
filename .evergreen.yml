stepback: true
command_type: test
ignore:
  - "*.md"
  - ".github/*"

#######################################
#              Functions              #
#######################################
functions:
  attach-cypress-results:
    command: attach.xunit_results
    params:
      files:
        - "./parsley/bin/cypress/*.xml"

  attach-cypress-screenshots:
    command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter:
        ["parsley/cypress/screenshots/*"]
      remote_file: parsley/${task_id}/
      bucket: mciuploads
      content_type: image/png
      permissions: public-read
      display_name: "screenshot:"

  attach-cypress-videos:
    command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter:
        ["parsley/cypress/videos/*"]
      remote_file: parsley/${task_id}/
      bucket: mciuploads
      content_type: video/mp4
      permissions: public-read
      display_name: "video:"

  attach-test-results:
    command: attach.xunit_results
    params:
      files:
        - "./parsley/bin/jest/*.xml"

  attach-storybook:
    command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter:
        ["parsley/storybook-static/*"]
      remote_file: parsley/${task_id}/storybook/
      bucket: mciuploads
      content_type: text/html
      permissions: public-read
      display_name: storybook_

  # Ideally we can get rid of this command upon the completion of EVG-17334.
  attach-storybook-assets-js:
    command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter:
        ["parsley/storybook-static/assets/*.js"]
      remote_file: parsley/${task_id}/storybook/assets/
      bucket: mciuploads
      content_type: application/javascript
      permissions: public-read
      display_name: storybook_assets_js_

  # Ideally we can get rid of this command upon the completion of EVG-17334.
  attach-storybook-assets-map:
    command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter:
        ["parsley/storybook-static/assets/*.js.map"]
      remote_file: parsley/${task_id}/storybook/assets/
      bucket: mciuploads
      content_type: application/json
      permissions: public-read
      display_name: storybook_assets_map_
  
  copy-cmdrc:
    command: shell.exec
    params:
      working_dir: parsley
      script: |
        cp .env-cmdrc.sample.json .env-cmdrc.json

  get-project:
    command: git.get_project
    type: setup
    params:
      directory: parsley

  install-chrome:
    command: shell.exec
    params:
      working_dir: parsley
      script: |
        cd /tmp
        curl -L -o "chrome.zip" "${chrome_download_url}"
        unzip chrome.zip
        cd -

  yarn-build:
    command: shell.exec
    params:
      working_dir: parsley
      script: |
        export PATH=${node_path}
        yarn build:local

  yarn-cypress:
    command: shell.exec
    params:
      working_dir: parsley
      script: |
        export PATH=${node_path}
        yarn cy:run --browser /tmp/chrome-linux/chrome --record --key ${cypress_record_key} --reporter junit

  yarn-eslint:
    command: shell.exec
    params:
      working_dir: parsley
      script: |
        export PATH=${node_path}
        yarn eslint:strict

  yarn-install:
    command: shell.exec
    params:
      working_dir: parsley
      script: |
        export PATH=${node_path}
        yarn

  yarn-preview:
    command: shell.exec
    params:
      working_dir: parsley
      background: true
      script: |
        export PATH=${node_path}
        yarn preview

  yarn-snapshot:
    command: shell.exec
    params:
      working_dir: parsley
      script: |
        export PATH=${node_path}
        yarn test --ci --testPathPattern=storyshots.test.ts

  yarn-storybook:
    command: shell.exec
    params:
      working_dir: parsley
      script: |
        export PATH=${node_path}
        yarn storybook:build

  yarn-test:
    command: shell.exec
    params:
      working_dir: parsley
      script: |
        export PATH=${node_path}
        yarn test --ci --testPathIgnorePatterns=storyshots.test.ts

  yarn-tsc:
    command: shell.exec
    params:
      working_dir: parsley
      script: |
        export PATH=${node_path}
        yarn check-types

#######################################
#                Tasks                #
#######################################
tasks:
  - name: compile
    commands:
    - func: copy-cmdrc
    - func: yarn-build

  - name: type_check
    commands:
    - func: yarn-tsc

  - name: lint
    commands:
    - func: yarn-eslint

  - name: test
    commands:
    - func: yarn-test
    - func: attach-test-results

  - name: e2e_test
    commands:
    - func: copy-cmdrc
    - func: yarn-build
    - func: yarn-preview
    - func: install-chrome
    - func: yarn-cypress
    - func: attach-cypress-results
    - func: attach-cypress-screenshots
    - func: attach-cypress-videos

  - name: storybook
    commands:
    - func: yarn-storybook
    - func: attach-storybook
    - func: attach-storybook-assets-js
    - func: attach-storybook-assets-map

  - name: snapshots
    commands:
    - func: yarn-snapshot
    - func: attach-test-results

buildvariants:
  - name: ubuntu1604-small
    display_name: Ubuntu 16.04 (small)
    run_on:
    - ubuntu1604-small
    tasks:
    - name: compile
    - name: type_check
    - name: lint
    - name: test
    - name: storybook
    - name: snapshots

  - name: ubuntu1604-large
    display_name: Ubuntu 16.04 (large)
    run_on:
    - ubuntu1604-large
    tasks:
    - name: e2e_test

pre:
  - func: get-project
  - func: yarn-install
